// ##一面: 
//     CSS 常见两列布局、三列布局

    中间自适应:

    浮动
    div.left
    div.right
    div.content

        .left{
            float:left
            width:100px;
        }
        .right{
            float:right;
            width:100px
        }
        .content{
        }

    定位
    div.left
    div.content
    div.right
     .left{
            width:100px;
            position:absulote
            left:0
        }
        .right{
            position:absulote
            right:0
            width:100px
        }
        .content{
              position:absulote
            right:100px
            left:100px
        }


    flex 
        div.left
        div.content
        div.right
             div.father{
                 display:flex
             }
             .content{
                 flex:1
             }


//     CSS 水平垂直居中

        水平居中:  
            text-align:center 
            margin: 0 auto
            flex;
            定位

        垂直居中：
            line-height =height
            vertical-align:middle
            flex
            定位


//     闭包，JS 没有闭包的话会怎么样

//     typeof 和 instanceof

       Typeof  返回一个数据的数据类型
       instanceof 判断对象Object 是否属于某个类型

//     js 的原型链，继承

//     js 的 bind、apply、call 有什么区别

//     var、let、const的区别

//     new 操作符原理（手动实现 new 给出思路）

//     箭头函数，箭头函数 this 问题，箭头函数是否可以被 new

//     promise 知道吗，手写一个 promise 怎么写（说思路）

//     promise.all 应用场景

//     promise 和 async/await 的区别

//     vue 的生命周期（我说我 React 比较熟）

//     react 的生命周期（React16）

//     react 性能优化

//     react 的 diff 算法

//     react 的 Fiber 架构

//     状态码 304（强缓存和协商缓存）

//     你有什么要问的吗？

// ##二面：
//     看你项目 ES6 用的比较多，说说 ES6 的一些新特性

//     有没有考虑对图片处理的优化手段，说说常用的

//     图片懒加载怎么做

//     考虑过缓存方面的优化吗，强缓存和协商缓存区别

//     防抖和节流

//     实现无缝滑屏，你觉得怎么实现

//     dns 查询原理

//     tcp 握手和挥手

//     tcp 和 udp 区别，udp 使用场景

//     https 和 http 区别

//     http2.0 相比 1.0 好在哪

//     抓包会吗，抓包原理，fiddler 用过吗

//     跨域

//     csrf、xss，如何预防

//     项目的 webpack 配置

//     plugin 和 loader 的区别

//     写过 webpack 的插件吗（没写过）

//     webpack 单路口和多路口打包配置，为什么需要多路口

//     babel 的编译原理，抽象语法树

// ##三面：
//     看你做了挺多项目，有没有在架构层面上考虑过对项目的优化

//     MVC MVP MVVM 架构了解吗，他们的使用场景

//     怎么理解前后端分离思想

//     和后端一般是怎么沟通和联调的

//     网络安全

//     看你用过 nginx，聊聊 nginx 吧

//     docker 也用过？（不是很熟还是别往简历上写给自己挖坑啦..）

//     后端技术栈了解哪些

//     有什么想问的吗？

// 官网面试流程
// ##一面：

//     圣杯布局、双飞翼布局

//     CSS 媒体查询

//     CSS 动画、CSS 对网页性能优化

//     浏览器渲染原理、回流与重绘

//     JS 单线程、EventLoop、宏队列、微队列

//     Go 语言知道吗？ 为什么 Go 效率比较高？ （只是了解，效率高大概是因为多线程？）

//     Ajax 和 Fetch

//     怎么同时让多个异步请求并行？

//     跨域问题

//     xss 和 csrf （聊到跨域基本都会聊跨域安全问题，所以这两个知识点可以一起准备）

//     session 和 cookie

//     服务器怎么知道 session 过期？

//     怎么设置 cookie 过期时间

//     sessionStorage 和 localStorage

//     强缓存和协商缓存

//     ES6 数组新增方法

//     ES6 箭头函数和普通函数区别

//     promise、generator、async/await

//     react 父子组件传参

//     PureComponent 知道吗

//     React 性能优化

//     Redux 原理，Redux 源码看过吗？ Redux 中间件呢？

// 再次一面:
//     那你觉得 java 里的继承和 JS 里的继承有什么区别

//     JS 垃圾回收

//     JS EventLoop

//     ES6 新特性

//     知道装饰器吗

//     数组方法 map、filter、reduce

//     新数据结构 Set、Map

//     babel 的编译原理

//     webpack 工作流程和原理，怎么写一个插件

//     JS 基础还行，问问网络相关知识？（好..）

//     从 url 到页面渲染过程

//     你刚说到 DNS 解析 能详细说说嘛？ DNS 递归和迭代的区别呢？

//     TCP ？ UDP ？ 区别是什么，你说 TCP 头部很大，具体有哪些报文信息呢？

//     页面渲染 重绘与重排 页面加载如何优化

//     http1.1 / http2.0 / https

//     聊聊数据结构的东西吧 算法怎么样？（一般..）

//     栈、队列、树、图一些基础

//     最短路径算法能简单聊聊实现吗 （迪杰斯特拉算法）

//     树的深度优先遍历、广度优先遍历实现和区别

//     一棵二叉树要用数组存储，这棵树要具备哪种条件？ （完全二叉树）

//     实现括号匹配用数据结构怎么做？说说思路 （栈）

//     快速排序原理

//     有什么想问我的？ （实习在什么事业部，具体做什么？手Q，做手Q新业务）

// ##二面：

//     说说项目中遇到的坑，怎么解决的

//     项目中有考虑到哪些优化的地方？

//     小程序的富文本为什么选用 wxParse，富文本原理

//     图片有哪些格式，知道 WebP 格式的图片吗，图片的一些优化手段

//     图片懒加载原理

//     跨域

//     前端常见攻击方式

//     状态码

//     强缓存和协商缓存

//     Node 的优势

//     Express 和 Koa 区别

//     react 路由原理

//     react hooks

//     redux 异步中间件实现原理

//     Vue MVVM原理

//     服务端渲染原理

//     nginx 的配置，反向代理、负载均衡原理

//     知道 PWA 吗

//     hybrid 技术

//     Flutter 了解吗

//     看过源码吗？

//     有什么想问的？


// ##三面：
//     使用框架踩到坑时，有没有去看过源码？

//     在做项目时，有没有从架构层面考虑过？

//     我现在有个需求，需要实现一个 web 端的微信，你想想该怎么实现

//     怎么看待前后端分离思想，以及服务端渲染技术

//     写过脚手架吗？

//     了解过设计模式吗？

//     后端的技术栈有了解吗？

//     平时是怎么学习的，学习习惯，为什么学前端？

//     你有什么想问的？

